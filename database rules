rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      match /courses/{courseId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
				
        match /exams/{examId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
          

        }
      }
    }

    match /codes/{codeId} {
      allow read: if request.auth != null;
    }

    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && resource.data.master == request.auth.token.email;
      allow create: if request.auth != null && request.resource.data.master == request.auth.token.email;
      allow delete, update: if request.auth != null && resource.data.master == request.auth.token.email;

      match /documents/{documentId} {
       allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/courses/$(courseId)).data.master == request.auth.token.email;
      }

      match /exams/{examId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/courses/$(courseId)).data.master == request.auth.token.email;


        match /test/{testId} {
          allow get, list: if request.auth != null;
          
           allow read, write: if request.auth != null &&
            get(/databases/$(database)/documents/courses/$(courseId)).data.master == request.auth.token.email;
          //allow read, write: if request.auth != null && get(/databases/$(database)/test/exams/$(examsId))/courses/$(courseId)).data.master == request.auth.token.email;
        }

        match /students/{studentId} {
          allow read, write: if request.auth != null && request.auth.uid == studentId;
          allow create, update: if request.auth != null
            && request.auth.uid == studentId
            && request.resource.data.qualification is number
            && request.resource.data.completed is bool;
            allow read, write: if request.auth != null && get(/databases/$(database)/documents/courses/$(courseId)).data.master == request.auth.token.email;
        }
      }
    }
  }
}
